# Thermal Anomaly Detection API Configuration

detection:
  # Statistical analysis parameters
  statistical:
    temperature_threshold: 6.0    # Conservative threshold for statistical detection
    min_anomaly_size: 200         # Minimum anomaly size in pixels
  
  # Thermal hot spot detection
  thermal:
    hot_spot_threshold: 0.75      # Sensitivity for hot spot detection
    temperature_threshold: 200    # Temperature threshold (0-255)
    min_cluster_size: 15          # Minimum cluster size for DBSCAN
    epsilon: 20                   # Cluster epsilon for DBSCAN
  
  # ML-based detection
  ml:
    threshold: 0.5                # Detection threshold (lower = more detections)
    min_area: 200                 # Minimum detection area in pixels²
    max_area: 5000                # Maximum detection area in pixels²
    max_annotations: 3            # Maximum number of annotations to show
    blue_threshold: 30            # Maximum blue pixel percentage
  
  # Confidence thresholds
  confidence:
    min_confidence: 0.6           # Minimum confidence to report anomaly

# Visualization settings
visualization:
  output:
    save_results: true            # Enable saving results to disk
    result_format: "png"          # Output format (png, jpg)
    output_dir: "unified_results" # Output directory

# Model configuration
model:
  path: "ML_analysis/models/best_model.pth"  # Path to trained ML model

# API settings
api:
  host: "0.0.0.0"
  port: 8000
  workers: 1                      # Number of worker processes
  reload: false                   # Auto-reload on code changes (dev only)
  
  # File upload limits
  max_upload_size: 10485760       # 10MB in bytes
  allowed_extensions:
    - ".jpg"
    - ".jpeg"
    - ".png"
  
  # CORS settings
  cors:
    allow_origins:
      - "*"                       # Configure for production
    allow_credentials: true
    allow_methods:
      - "*"
    allow_headers:
      - "*"

# Logging configuration
logging:
  level: "INFO"                   # DEBUG, INFO, WARNING, ERROR
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
